@tailwind base;
@tailwind components;
@tailwind utilities;

@import "react-datepicker/dist/react-datepicker.css";
@import "react-toastify/dist/ReactToastify.css";
@import url('https://fonts.cdnfonts.com/css/made-tommy-outline');
@import url("https://fonts.cdnfonts.com/css/ds-digital");

.timmer .timmer-number {
  font-family: "DS-Digital", sans-serif;
}

:root {
  --loader-text-color: #f6e9fe;
  --card-color: #1b0354;
  --card-color-dark: #0da6ff;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.sidebar-scroll::-webkit-scrollbar {
  width: 4px;
}
.sidebar-scroll::-webkit-scrollbar-thumb {
  background: rgba(52, 202, 165, 0.1);
}
// ::-webkit-scrollbar {
//   width: 8px;
//   height: 6px;
// }

// ::-webkit-scrollbar-track {
//   background: transparent;
// }

// ::-webkit-scrollbar-thumb {
//   background: #0d062d;
//   border-radius: 6px;
// }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.hide-scroll::-webkit-scrollbar {
  width: 6px;
}

.no-scroll::-webkit-scrollbar {
  width: 0px;
}

::-webkit-scrollbar {
  height: 0px;
  width: 0px;
  transition: width 0.8s ease-in-out;
}
:root[scrollbar] ::-webkit-scrollbar {
  width: 6px;
  height: 6px;
  transition: width 0.8s ease-in-out;
}
::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: #0f0477;
}
.dark ::-webkit-scrollbar-thumb {
  background: #4640c3;
}

::selection {
  color: white;
  background: #0d062d;
}

.dark ::selection {
  color: rgb(201, 191, 2);
  background: #010e4d;
}

.max-container {
  max-width: 1440px;
  margin: 0 auto;
}

// ======MISCELLANEOUS=========

.button--loader {
  display: flex;
  gap: 0.25rem;
  span {
    width: 0.8rem;
    height: 0.8rem;
    background-color: #fff;
    border-radius: 50%;
    animation: scaleUp 1s infinite;
  }
}

.button--loader span:nth-child(1) {
  animation-delay: 0.2s;
}

.button--loader span:nth-child(2) {
  animation-delay: 0.4s;
}

.button--loader span:nth-child(3) {
  animation-delay: 0.6s;
}

@keyframes scaleUp {
  0%,
  80%,
  100% {
    transform: scale(0);
  }

  40% {
    transform: scale(1);
  }
}
svg text,
svg circle {
  stroke-width: 2;
  font-size: 5rem;
  letter-spacing: -4px;
}

svg text.text-body,
svg circle {
  stroke: var(--loader-text-color);
  fill: transparent;
  animation: anime-stroke 2s infinite alternate;
}

@keyframes anime-stroke {
  0% {
    fill: transparent;
    stroke: var(--loader-text-color);
    stroke-width: 2;
    stroke-dashoffset: 25%;
    stroke-dasharray: 0 32%;
  }

  50% {
    fill: transparent;
    stroke: var(--loader-text-color);
    stroke-width: 2;
  }

  80%,
  100% {
    fill: var(--loader-text-color);
    stroke: transparent;
    stroke-width: 0;
    stroke-dashoffset: -25%;
    stroke-dasharray: 32% 0;
  }
}
.hero::before {
  content: "";
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  background: linear-gradient(
    0deg,
    rgba(0, 0, 0, 0.5) 0%,
    rgba(0, 0, 0, 0.5) 100%
  );
  background-size: contain;
}
.active {
  background: linear-gradient(
    92deg,
    rgba(140, 49, 255, 0.05) 0%,
    rgba(140, 49, 255, 0.22) 100%
  );
}

.card {
  .card-border,
  &::before {
    opacity: 0;
    transition: opacity 500ms;
    content: "";
    position: absolute;
    border-radius: inherit;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 2;
  }
  &::before {
    background: radial-gradient(
      800px circle at var(--border--x) var(--border--y),
      rgba(0, 0, 0, 0.002),
      transparent 40%
    );
    z-index: 3;
  }
  &:hover {
    .card-border,
    &::before {
      opacity: 1;
    }
  }

  > .card-content {
    border-radius: inherit;
    margin: -4px;
    position: relative;
    z-index: 5;
  }

  .card-border {
    background: radial-gradient(
      400px circle at var(--border--x) var(--border--y),
      var(--card-color),
      transparent 40%
    );
    z-index: 1;
  }
}



@keyframes animate3d {
  0% {
    transform: rotateX(0);
  }
  50% {
    opacity: 0.7;
    scale: 2;
  }
  100% {
    transform: rotateX(360deg);
  }
}

.rotate-3d {
  animation: animate3d 3s 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) infinite;
  transform-style: preserve-3d;
  transform-origin: center;
}
.transform-3d {
  transform-style: preserve-3d;
  transform: translate3d(0, 0, -140px) rotateX(121deg);
}
.perspective {
  perspective: 300px;
  -webkit-perspective: 300px;
  -moz-perspective: 300px;

  &:hover {
    .shadow-bounce::before {
      animation-play-state: paused;
    }
  }
}

.shadow-bounce {
  transform-style: preserve-3d;
  transform: translate3d(0, 0, 30px);

  &::before {
    position: absolute;
    height: 100%;
    width: 100%;
    bottom: 0;
    left: 8rem;
    content: '';
    display: block;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.327);
    transform: translateZ(-29px);
    animation: bounce-shadow 2.5s linear infinite;
  }
  @media screen and (max-width: 600px) {
    transform: translate3d(0, 0, 10px);
    &::before {
      left: 5rem;
    }
  }
  @media screen and (max-width: 500px) {
    transform: translate3d(10px, 0, 20px);
    &::before {
      left: 0rem;
      right: 3rem;
    }
  }
}

@keyframes bounce-shadow {
  from,
  to {
    transform: translateZ(-9px) translateY(5%) scale(0.9);
    opacity: 0.3;
  }
  50% {
    transform: translateZ(-9px) scale(1.3);
    opacity: 1;
  }
}

.image-bounce {
  animation: bounce 2.5s linear infinite;

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(-5%);
    }
    50% {
      transform: none;
    }
  }

  &:hover {
    animation-play-state: paused;
  }
}